# Method Missing :

class Person
  def initialize(name)
    @name = name
  end

  def name
    @name
  end

  def method_missing(method_name, *arguments)
    method_name = method_name.to_s
    if method_name.start_with?("greet_")
      greeting = method_name.split("_")[1]
      "#{greeting.capitalize}, #{@name}!"
    else
      super
    end
  end
end

person = Person.new("Alice")
puts person.name              
# Output: Alice
puts person.greet_hello       
# Output: Hello, Alice!
puts person.greet_hi          
# Output: Hi, Alice!
puts person.non_existing_method 
# This will raise a NoMethodError


# If the called method name starts with "greet_". If it does, we extract the greeting part from the method name and return a greeting string with the person's name.
# If the called method doesn't start with "greet_", we call super to handle the case with the default method_missing behavior (raising a NoMethodError).
